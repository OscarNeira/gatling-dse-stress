general {
  dataDir = ./data

  boolean = true
  int = 1
  string = str
  list = [1, 3]

} # end general settings

cassandra {
  hosts = "127.0.0.1"
  port = 9142
  dcName = datacenter1
  clusterName = Test Cluster
  defaultConsistency = LOCAL_QUORUM
  serialConsistency = LOCAL_SERIAL

  list = [1, 2]
  exists = true

  auth = {
    username = null
    password = null
  }

  poolingOptions = {

    local = {
      coreConnections = 2
      maxConnections = 8
      maxRequestsPerConnection = 10000
    }
    remote = {
      coreConnections = 1
      maxConnections = 1
      maxRequestsPerConnection = 512
    }

    maxQueueSize = 512
  }


}  # end cassandra settings


simulations {

  testSimConfig {

    defaults {
      table = default
      string = str
      int = 1
      bool = true
      duration = 1m
      list = [1, 2, 3]
    }

    includesTable {
      table = table1
      string = str
      int = 1
      bool = true
      duration = 1m
      list = [1, 2, 3]
    }

    missingTable {

    }

  }

  fetchBaseData {

    defaults {

      keyspace = fetchbase
      table = test

      dataFile = "fetchbase.csv"
      tokenRangesPerHost = 10
      paginationSize = 100
      maxPartitionKeys = 500
      appendToFile = false
      partitionKeyColumns = [id]
      columnsToFetch = [id, str]

      usersRampTime = 10s
      usersConstantTime = 20s

    }

    read {
      usersConstantCnt = 1000
    }

    badTokenRangesPerHost {
      tokenRangesPerHost = 50
    }

  }

  loadGeneratorTest {

    defaults {
      usersRampTime = 2s
      usersConstantTime = 10s
    }

    write {
      usersConstantCnt = 10
    }
  }


  createNetworkKeyspaceTest {

    createKeyspace {
      topology = NetworkTopologyStrategy
      replication {
        dc1: 3
        dc2: 1
      }
    }

    defaults {
      keyspace = TestKeyspace
    }

    read {
      usersConstantCnt = 1000
    }
  }

  createNetworkKeyspaceTest2 {

    createKeyspace {
      topology = NetworkTopologyStrategy
      replication {
        dc1: 3
      }
    }

    defaults {
      keyspace = TestKeyspace
    }

    read {
      usersConstantCnt = 1000
    }
  }

  createBadKeyspaceTest {

    createKeyspace {
      topology = Blah
      replication {
        dc1: 3
      }
    }

    defaults {
      keyspace = TestKeyspace
    }

    read {
      usersConstantCnt = 1000
    }
  }

  createSimpleKeyspaceTest {

    createKeyspace {
      topology = SimpleStrategy
      replication = 3
    }

    defaults {
      keyspace = TestKeyspace
    }

    read {
      usersConstantCnt = 1000
    }
  }

  createKeyspaceEnabledTest {

    createKeyspace {
      topology = SimpleStrategy
      replication = 3
      enabled = false
    }

    defaults {
      keyspace = TestKeyspace
    }

    read {
      usersConstantCnt = 1000
    }
  }
}